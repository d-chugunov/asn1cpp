/*
 * Generated by asn1c-0.9.24 (http://lionet.info/asn1c)
 * From ASN.1 module "SOME-MODULE"
 * 	found in "Simplified.a_sn"
 */

#ifndef	_SetRecord_ISet_Seqs_of_seq_H_
#define	_SetRecord_ISet_Seqs_of_seq_H_


#include <asn_application.h>

/* Including external dependencies */
#include "SeqOfSequenceRecord-I-IO-I.h"
#include <asn_SEQUENCE_OF.h>
#include <constr_SEQUENCE_OF.h>
#include <constr_SET.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */

/*
 * Method of determining the components presence
 */
typedef enum SetRecord_ISet_Seqs_of_seq_PR {
	SetRecord_ISet_Seqs_of_seq_PR_set,	/* Member set is present */
} SetRecord_ISet_Seqs_of_seq_PR;

/*
 * Method of determining the components presence
 */
typedef enum set_PR {
	set_PR_field1,	/* Member field1 is present */
	set_PR_field2,	/* Member field2 is present */
	set_PR_field3,	/* Member field3 is present */
	set_PR_field4,	/* Member field4 is present */
} set_PR;

/* Forward declarations */
struct SeqOfSequenceRecord_I_IO_I;
struct SequenceRecord_I_IO_I;

/* SetRecord-ISet-Seqs-of-seq */
typedef struct SetRecord_ISet_Seqs_of_seq {
	struct set {
		SeqOfSequenceRecord_I_IO_I_t	 field1;
		struct SeqOfSequenceRecord_I_IO_I	*field2	/* OPTIONAL */;
		struct field3 {
			A_SEQUENCE_OF(struct SequenceRecord_I_IO_I) list;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} field3;
		struct field4 {
			A_SEQUENCE_OF(struct SequenceRecord_I_IO_I) list;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *field4;
		
		/* Presence bitmask: ASN_SET_ISPRESENT(pset, set_PR_x) */
		unsigned int _presence_map
			[((4+(8*sizeof(unsigned int))-1)/(8*sizeof(unsigned int)))];
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} set;
	
	/* Presence bitmask: ASN_SET_ISPRESENT(pSetRecord_ISet_Seqs_of_seq, SetRecord_ISet_Seqs_of_seq_PR_x) */
	unsigned int _presence_map
		[((1+(8*sizeof(unsigned int))-1)/(8*sizeof(unsigned int)))];
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} SetRecord_ISet_Seqs_of_seq_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_SetRecord_ISet_Seqs_of_seq;

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "SeqOfSequenceRecord-I-IO-I.h"
#include "SequenceRecord-I-IO-I.h"

#endif	/* _SetRecord_ISet_Seqs_of_seq_H_ */
#include <asn_internal.h>
