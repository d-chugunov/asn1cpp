/*
 * Generated by asn1c-0.9.24 (http://lionet.info/asn1c)
 * From ASN.1 module "SOME-MODULE"
 * 	found in "SetRecord-SeRef-SeRefO-SeDirRef-SeDirRefO+SetRecord-ISetO-I-IO-I-Ref+SetRecord-ISetO-I-IO-I.asn"
 */

#ifndef	_SetRecord_SeRef_SeRefO_SeDirRef_SeDirRefO_H_
#define	_SetRecord_SeRef_SeRefO_SeDirRef_SeDirRefO_H_


#include <asn_application.h>

/* Including external dependencies */
#include "SetRecord-ISetO-I-IO-I-Ref.h"
#include "SetRecord-ISetO-I-IO-I.h"
#include <constr_SET.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */

/*
 * Method of determining the components presence
 */
typedef enum SetRecord_SeRef_SeRefO_SeDirRef_SeDirRefO_PR {
	SetRecord_SeRef_SeRefO_SeDirRef_SeDirRefO_PR_ref1,	/* Member ref1 is present */
	SetRecord_SeRef_SeRefO_SeDirRef_SeDirRefO_PR_ref2,	/* Member ref2 is present */
	SetRecord_SeRef_SeRefO_SeDirRef_SeDirRefO_PR_ref3,	/* Member ref3 is present */
	SetRecord_SeRef_SeRefO_SeDirRef_SeDirRefO_PR_ref4,	/* Member ref4 is present */
} SetRecord_SeRef_SeRefO_SeDirRef_SeDirRefO_PR;

/* Forward declarations */
struct SetRecord_ISetO_I_IO_I;

/* SetRecord-SeRef-SeRefO-SeDirRef-SeDirRefO */
typedef struct SetRecord_SeRef_SeRefO_SeDirRef_SeDirRefO {
	SetRecord_ISetO_I_IO_I_Ref_t	 ref1;
	struct SetRecord_ISetO_I_IO_I	*ref2	/* OPTIONAL */;
	SetRecord_ISetO_I_IO_I_t	 ref3;
	struct SetRecord_ISetO_I_IO_I	*ref4	/* OPTIONAL */;
	
	/* Presence bitmask: ASN_SET_ISPRESENT(pSetRecord_SeRef_SeRefO_SeDirRef_SeDirRefO, SetRecord_SeRef_SeRefO_SeDirRef_SeDirRefO_PR_x) */
	unsigned int _presence_map
		[((4+(8*sizeof(unsigned int))-1)/(8*sizeof(unsigned int)))];
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} SetRecord_SeRef_SeRefO_SeDirRef_SeDirRefO_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_SetRecord_SeRef_SeRefO_SeDirRef_SeDirRefO;

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "SetRecord-ISetO-I-IO-I-Ref.h"
#include "SetRecord-ISetO-I-IO-I.h"

#endif	/* _SetRecord_SeRef_SeRefO_SeDirRef_SeDirRefO_H_ */
#include <asn_internal.h>
