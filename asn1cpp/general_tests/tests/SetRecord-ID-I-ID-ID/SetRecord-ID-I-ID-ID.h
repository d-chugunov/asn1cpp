/*
 * Generated by asn1c-0.9.24 (http://lionet.info/asn1c)
 * From ASN.1 module "SOME-MODULE"
 * 	found in "SetRecord-ID-I-ID-ID.asn"
 */

#ifndef	_SetRecord_ID_I_ID_ID_H_
#define	_SetRecord_ID_I_ID_ID_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeInteger.h>
#include <constr_SET.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */

/*
 * Method of determining the components presence
 */
typedef enum SetRecord_ID_I_ID_ID_PR {
	SetRecord_ID_I_ID_ID_PR_val1,	/* Member val1 is present */
	SetRecord_ID_I_ID_ID_PR_val2,	/* Member val2 is present */
	SetRecord_ID_I_ID_ID_PR_val3,	/* Member val3 is present */
	SetRecord_ID_I_ID_ID_PR_val4,	/* Member val4 is present */
} SetRecord_ID_I_ID_ID_PR;

/* SetRecord-ID-I-ID-ID */
typedef struct SetRecord_ID_I_ID_ID {
	long	*val1	/* DEFAULT 123 */;
	long	 val2;
	long	 val3	/* DEFAULT 0 */;
	long	*val4	/* DEFAULT 567 */;
	
	/* Presence bitmask: ASN_SET_ISPRESENT(pSetRecord_ID_I_ID_ID, SetRecord_ID_I_ID_ID_PR_x) */
	unsigned int _presence_map
		[((4+(8*sizeof(unsigned int))-1)/(8*sizeof(unsigned int)))];
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} SetRecord_ID_I_ID_ID_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_SetRecord_ID_I_ID_ID;

#ifdef __cplusplus
}
#endif

#endif	/* _SetRecord_ID_I_ID_ID_H_ */
#include <asn_internal.h>
