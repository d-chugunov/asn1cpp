/*
 * Generated by asn1c-0.9.24 (http://lionet.info/asn1c)
 * From ASN.1 module "SOME-MODULE"
 * 	found in "SetRecord-ISet-NumS-NumSO-NumSRefWithTag-NumSRefWithTagO+NumericStringRefWithTag.asn"
 */

#ifndef	_SetRecord_ISet_NumS_NumSO_NumSRefWithTag_NumSRefWithTagO_H_
#define	_SetRecord_ISet_NumS_NumSO_NumSRefWithTag_NumSRefWithTagO_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NumericString.h>
#include "NumericStringRefWithTag.h"
#include <constr_SET.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */

/*
 * Method of determining the components presence
 */
typedef enum SetRecord_ISet_NumS_NumSO_NumSRefWithTag_NumSRefWithTagO_PR {
	SetRecord_ISet_NumS_NumSO_NumSRefWithTag_NumSRefWithTagO_PR_set,	/* Member set is present */
} SetRecord_ISet_NumS_NumSO_NumSRefWithTag_NumSRefWithTagO_PR;

/*
 * Method of determining the components presence
 */
typedef enum set_PR {
	set_PR_str1,	/* Member str1 is present */
	set_PR_str2,	/* Member str2 is present */
	set_PR_str3,	/* Member str3 is present */
	set_PR_str4,	/* Member str4 is present */
} set_PR;

/* SetRecord-ISet-NumS-NumSO-NumSRefWithTag-NumSRefWithTagO */
typedef struct SetRecord_ISet_NumS_NumSO_NumSRefWithTag_NumSRefWithTagO {
	struct set {
		NumericString_t	 str1;
		NumericString_t	*str2	/* OPTIONAL */;
		NumericStringRefWithTag_t	 str3;
		NumericStringRefWithTag_t	*str4	/* OPTIONAL */;
		
		/* Presence bitmask: ASN_SET_ISPRESENT(pset, set_PR_x) */
		unsigned int _presence_map
			[((4+(8*sizeof(unsigned int))-1)/(8*sizeof(unsigned int)))];
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} set;
	
	/* Presence bitmask: ASN_SET_ISPRESENT(pSetRecord_ISet_NumS_NumSO_NumSRefWithTag_NumSRefWithTagO, SetRecord_ISet_NumS_NumSO_NumSRefWithTag_NumSRefWithTagO_PR_x) */
	unsigned int _presence_map
		[((1+(8*sizeof(unsigned int))-1)/(8*sizeof(unsigned int)))];
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} SetRecord_ISet_NumS_NumSO_NumSRefWithTag_NumSRefWithTagO_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_SetRecord_ISet_NumS_NumSO_NumSRefWithTag_NumSRefWithTagO;

#ifdef __cplusplus
}
#endif

#endif	/* _SetRecord_ISet_NumS_NumSO_NumSRefWithTag_NumSRefWithTagO_H_ */
#include <asn_internal.h>
